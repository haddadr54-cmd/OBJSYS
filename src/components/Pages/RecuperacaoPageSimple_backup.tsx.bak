import { useState } from 'react';
import { AlertTriangle, GraduationCap, BookOpen, Save, Users, CheckCircle } from 'lucide-react';

// Sistema de Recupera√ß√£o - Interface Visual Melhorada
export default function RecuperacaoPageSimple() {
  const [selectedAluno, setSelectedAluno] = useState<any>(null);
  const [selectedDisciplina, setSelectedDisciplina] = useState<any>(null);
  const [notaRecuperacao, setNotaRecuperacao] = useState<string>('');
  const [tipoAtividade, setTipoAtividade] = useState<string>('');
  const [observacao, setObservacao] = useState<string>('');

  // Dados completos para demonstra√ß√£o
  const alunosDemo = [
    {
      id: 'demo-1',
      nome: 'Jo√£o Silva',
      numero: '01',
      turma: '6¬™ A',
      mediaGeral: 6.1,
      disciplinas: [
        { 
          id: 'mat-1',
          nome: 'Matem√°tica', 
          nota: 5.5, 
          status: 'Recupera√ß√£o',
          avaliacoes: [
            { tipo: 'Prova Bimestral', nota: 4.5, peso: 0.6 },
            { tipo: 'Trabalhos', nota: 7.0, peso: 0.4 }
          ]
        },
        { 
          id: 'port-1',
          nome: 'Portugu√™s', 
          nota: 6.2, 
          status: 'Recupera√ß√£o',
          avaliacoes: [
            { tipo: 'Prova Bimestral', nota: 6.0, peso: 0.6 },
            { tipo: 'Reda√ß√£o', nota: 6.5, peso: 0.4 }
          ]
        }
      ]
    },
    {
      id: 'demo-2', 
      nome: 'Maria Santos',
      numero: '02',
      turma: '6¬™ A',
      mediaGeral: 5.8,
      disciplinas: [
        { 
          id: 'cien-1',
          nome: 'Ci√™ncias', 
          nota: 4.8, 
          status: 'Recupera√ß√£o',
          avaliacoes: [
            { tipo: 'Prova Bimestral', nota: 4.0, peso: 0.7 },
            { tipo: 'Experimento', nota: 6.5, peso: 0.3 }
          ]
        }
      ]
    },
    {
      id: 'demo-3',
      nome: 'Pedro Oliveira',
      numero: '03', 
      turma: '6¬™ B',
      mediaGeral: 5.3,
      disciplinas: [
        {
          id: 'hist-1',
          nome: 'Hist√≥ria',
          nota: 4.2,
          status: 'Recupera√ß√£o',
          avaliacoes: [
            { tipo: 'Prova Bimestral', nota: 3.5, peso: 0.8 },
            { tipo: 'Semin√°rio', nota: 7.0, peso: 0.2 }
          ]
        },
        {
          id: 'geo-1', 
          nome: 'Geografia',
          nota: 6.4,
          status: 'Recupera√ß√£o',
          avaliacoes: [
            { tipo: 'Prova Bimestral', nota: 6.0, peso: 0.6 },
            { tipo: 'Mapa Conceitual', nota: 7.2, peso: 0.4 }
          ]
        }
      ]
    }
  ];

  const handleSalvarNota = () => {
    if (selectedAluno && selectedDisciplina && notaRecuperacao && tipoAtividade) {
      const detalhes = [
        `üë®‚Äçüéì Aluno: ${selectedAluno.nome}`,
        `üìö Disciplina: ${selectedDisciplina.nome}`,
        `üìù Atividade: ${tipoAtividade}`,
        `üìä Nota: ${notaRecuperacao}`,
        observacao ? `üí≠ Observa√ß√£o: ${observacao}` : ''
      ].filter(Boolean).join('\n');
      
      alert(`‚úÖ NOTA DE RECUPERA√á√ÉO REGISTRADA!\n\n${detalhes}`);
      
      // Reset form
      setNotaRecuperacao('');
      setTipoAtividade('');
      setObservacao('');
      setSelectedDisciplina(null);
    } else {
      alert('‚ö†Ô∏è Preencha todos os campos obrigat√≥rios!');
    }
  };

  const getCorStatus = (nota: number) => {
    if (nota < 5.0) return 'text-red-700 bg-red-100 border-red-300 shadow-md';
    if (nota < 7.0) return 'text-orange-700 bg-orange-100 border-orange-300 shadow-md';
    return 'text-green-700 bg-green-100 border-green-300 shadow-md';
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-100 p-6" style={{backgroundImage: 'radial-gradient(circle at 20% 80%, rgba(120, 119, 198, 0.1) 0%, transparent 50%), radial-gradient(circle at 80% 20%, rgba(255, 119, 198, 0.1) 0%, transparent 50%)'}}>
      {/* Header com Visual Melhorado */}
      <div className="relative bg-white rounded-3xl shadow-xl border border-gray-200 p-8 mb-8 overflow-hidden">
        <div className="absolute inset-0 bg-gradient-to-r from-blue-500/5 via-purple-500/5 to-indigo-500/5"></div>
        <div className="relative flex items-center justify-between">
          <div className="flex items-center space-x-6">
            <div className="relative">
              <div className="p-5 bg-gradient-to-br from-blue-600 via-purple-600 to-indigo-700 rounded-3xl shadow-2xl transform hover:scale-105 transition-transform duration-300">
                <GraduationCap className="h-12 w-12 text-white" />
              </div>
              <div className="absolute -top-2 -right-2 w-6 h-6 bg-gradient-to-r from-orange-500 to-red-600 rounded-full border-4 border-white animate-pulse shadow-xl"></div>
            </div>
            <div>
              <h1 className="text-5xl font-black bg-gradient-to-r from-gray-900 via-blue-800 to-indigo-900 bg-clip-text text-transparent">
                Sistema de Recupera√ß√£o
              </h1>
              <p className="text-gray-700 mt-2 text-xl font-semibold">Gest√£o inteligente e acompanhamento de alunos em recupera√ß√£o</p>
              <div className="flex items-center space-x-4 mt-3">
                <div className="flex items-center space-x-2 bg-emerald-100 rounded-full px-4 py-2">
                  <div className="w-3 h-3 bg-emerald-500 rounded-full animate-pulse"></div>
                  <span className="text-sm text-emerald-700 font-bold uppercase tracking-wide">Sistema Online</span>
                </div>
                <span className="text-gray-400">‚Ä¢</span>
                <span className="text-sm text-gray-600 font-medium bg-gray-100 rounded-full px-3 py-1">Tempo Real</span>
              </div>
            </div>
          </div>
          <div className="hidden lg:flex flex-col items-center space-y-2">
            <div className="text-center bg-gradient-to-br from-blue-50 to-indigo-100 rounded-2xl p-6 border-2 border-blue-200 shadow-xl transform hover:scale-105 transition-transform">
              <p className="text-5xl font-black text-gray-800">{new Date().getDate()}</p>
              <p className="text-sm text-gray-600 uppercase tracking-wider font-bold mt-1">
                {new Date().toLocaleDateString('pt-BR', { month: 'short', year: 'numeric' })}
              </p>
            </div>
          </div>
        </div>
      </div>

      {/* Status Banner Melhorado */}
      <div className="relative bg-gradient-to-r from-emerald-50 to-teal-50 border-2 border-emerald-200 rounded-xl p-6 mb-8 overflow-hidden">
        <div className="absolute inset-0 bg-gradient-to-r from-emerald-400/10 to-teal-400/10"></div>
        <div className="relative flex items-center justify-between">
          <div className="flex items-center space-x-4">
            <div className="p-3 bg-emerald-500 rounded-xl shadow-lg">
              <CheckCircle className="h-6 w-6 text-white" />
            </div>
            <div>
              <h3 className="text-xl font-bold text-emerald-800">Sistema Operacional</h3>
              <p className="text-emerald-700">
                <strong>{alunosDemo.length}</strong> alunos em recupera√ß√£o ‚Ä¢ Sistema funcionando perfeitamente
              </p>
            </div>
          </div>
          <div className="hidden sm:flex items-center space-x-2">
            <div className="w-3 h-3 bg-emerald-500 rounded-full animate-bounce"></div>
            <span className="text-emerald-600 font-medium">Online</span>
          </div>
        </div>
      </div>

      {/* Cards de Estat√≠sticas Ultra Modernos */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-8 mb-10">
        {/* Card Total Alunos */}
        <div className="relative group">
          <div className="absolute -inset-1 bg-gradient-to-r from-blue-400 via-cyan-500 to-blue-600 rounded-3xl blur-lg opacity-30 group-hover:opacity-60 transition-opacity duration-500"></div>
          <div className="relative bg-white rounded-3xl p-8 shadow-2xl border-2 border-gray-100 hover:shadow-3xl transition-all duration-500 transform hover:-translate-y-2 hover:scale-105">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-black text-gray-500 uppercase tracking-widest mb-2">Total de Alunos</p>
                <p className="text-5xl font-black text-gray-900 mb-1">{alunosDemo.length}</p>
                <p className="text-sm text-blue-600 font-bold uppercase tracking-wide bg-blue-100 rounded-full px-3 py-1">Em Recupera√ß√£o</p>
              </div>
              <div className="p-5 bg-gradient-to-br from-blue-500 via-blue-600 to-cyan-600 rounded-3xl shadow-2xl transform rotate-3 group-hover:rotate-6 transition-transform duration-300">
                <Users className="h-12 w-12 text-white" />
              </div>
            </div>
          </div>
        </div>
        
        {/* Card Disciplinas */}
        <div className="relative group">
          <div className="absolute -inset-1 bg-gradient-to-r from-orange-400 via-red-500 to-pink-500 rounded-3xl blur-lg opacity-30 group-hover:opacity-60 transition-opacity duration-500"></div>
          <div className="relative bg-white rounded-3xl p-8 shadow-2xl border-2 border-gray-100 hover:shadow-3xl transition-all duration-500 transform hover:-translate-y-2 hover:scale-105">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-black text-gray-500 uppercase tracking-widest mb-2">Disciplinas</p>
                <p className="text-5xl font-black text-gray-900 mb-1">
                  {alunosDemo.reduce((acc, aluno) => acc + aluno.disciplinas.length, 0)}
                </p>
                <p className="text-sm text-orange-600 font-bold uppercase tracking-wide bg-orange-100 rounded-full px-3 py-1">Monitoradas</p>
              </div>
              <div className="p-5 bg-gradient-to-br from-orange-500 via-red-500 to-pink-500 rounded-3xl shadow-2xl transform -rotate-3 group-hover:-rotate-6 transition-transform duration-300">
                <BookOpen className="h-12 w-12 text-white" />
              </div>
            </div>
          </div>
        </div>

        {/* Card M√©dia Geral */}
        <div className="relative group">
          <div className="absolute -inset-1 bg-gradient-to-r from-purple-400 via-indigo-500 to-purple-600 rounded-3xl blur-lg opacity-30 group-hover:opacity-60 transition-opacity duration-500"></div>
          <div className="relative bg-white rounded-3xl p-8 shadow-2xl border-2 border-gray-100 hover:shadow-3xl transition-all duration-500 transform hover:-translate-y-2 hover:scale-105">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-black text-gray-500 uppercase tracking-widest mb-2">M√©dia Geral</p>
                <p className="text-5xl font-black text-gray-900 mb-1">
                  {(alunosDemo.reduce((acc, aluno) => acc + aluno.mediaGeral, 0) / alunosDemo.length).toFixed(1)}
                </p>
                <p className="text-sm text-purple-600 font-bold uppercase tracking-wide bg-purple-100 rounded-full px-3 py-1">Meta: 7.0</p>
              </div>
              <div className="p-5 bg-gradient-to-br from-purple-500 via-indigo-600 to-purple-700 rounded-3xl shadow-2xl transform rotate-6 group-hover:rotate-12 transition-transform duration-300">
                <GraduationCap className="h-12 w-12 text-white" />
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Lista de Alunos - Design Ultra Moderno */}
      <div className="bg-white rounded-3xl shadow-2xl border-2 border-gray-100 overflow-hidden">
        <div className="bg-gradient-to-r from-slate-50 via-gray-50 to-slate-100 p-8 border-b-2 border-gray-200">
          <div className="flex items-center justify-between">
            <div>
              <h2 className="text-4xl font-black bg-gradient-to-r from-gray-800 to-gray-600 bg-clip-text text-transparent mb-3">
                Alunos em Recupera√ß√£o
              </h2>
              <p className="text-gray-700 text-lg font-semibold">Selecione um aluno para registrar notas de recupera√ß√£o acad√™mica</p>
            </div>
            <div className="hidden sm:flex items-center space-x-3 px-6 py-4 bg-gradient-to-r from-orange-100 to-red-100 rounded-2xl shadow-xl border-2 border-orange-200">
              <AlertTriangle className="h-7 w-7 text-orange-600" />
              <div className="text-center">
                <span className="text-2xl font-black text-orange-800">{alunosDemo.length}</span>
                <p className="text-xs text-orange-700 uppercase font-bold tracking-wide">Alunos</p>
              </div>
            </div>
          </div>
        </div>
        <div className="p-6">
          <div className="space-y-6">
            {alunosDemo.map(aluno => (
              <div key={aluno.id} className={`relative overflow-hidden rounded-2xl transition-all duration-300 transform hover:scale-[1.02] ${
                selectedAluno?.id === aluno.id 
                  ? 'bg-gradient-to-r from-blue-50 to-indigo-50 border-2 border-blue-300 shadow-2xl' 
                  : 'bg-white border-2 border-gray-200 hover:border-gray-300 hover:shadow-xl'
              }`}>
                {/* Gradient overlay sutil */}
                {selectedAluno?.id === aluno.id && (
                  <div className="absolute inset-0 bg-gradient-to-r from-blue-400/5 to-indigo-400/5 pointer-events-none"></div>
                )}
                
                <div className="relative p-6">
                  <div className="flex items-center justify-between mb-4">
                    <div className="flex items-center space-x-4">
                      {/* Avatar com iniciais */}
                      <div className={`w-12 h-12 rounded-full flex items-center justify-center font-bold text-white text-lg shadow-lg ${
                        selectedAluno?.id === aluno.id 
                          ? 'bg-gradient-to-br from-blue-500 to-indigo-600' 
                          : 'bg-gradient-to-br from-gray-400 to-gray-600'
                      }`}>
                        {aluno.nome.split(' ').map(n => n[0]).join('').substring(0, 2)}
                      </div>
                      <div>
                        <h3 className="text-2xl font-bold text-gray-900">{aluno.nome}</h3>
                        <div className="flex items-center space-x-4 text-sm mt-2">
                          <div className="flex items-center space-x-1">
                            <span className="w-2 h-2 bg-gray-400 rounded-full"></span>
                            <span className="text-gray-600 font-medium">N¬∫ {aluno.numero}</span>
                          </div>
                          <div className="flex items-center space-x-1">
                            <span className="w-2 h-2 bg-blue-400 rounded-full"></span>
                            <span className="text-gray-600 font-medium">{aluno.turma}</span>
                          </div>
                          <div className={`px-3 py-1 rounded-full text-xs font-bold ${getCorStatus(aluno.mediaGeral)}`}>
                            M√©dia: {aluno.mediaGeral}
                          </div>
                        </div>
                      </div>
                    </div>
                    <button
                      onClick={() => setSelectedAluno(selectedAluno?.id === aluno.id ? null : aluno)}
                      className={`px-8 py-4 rounded-2xl font-black text-lg transition-all duration-300 transform hover:scale-110 shadow-2xl border-2 ${
                        selectedAluno?.id === aluno.id
                          ? 'bg-gradient-to-r from-emerald-500 via-green-600 to-emerald-600 text-white border-emerald-400 hover:from-emerald-600 hover:to-green-700 animate-pulse'
                          : 'bg-gradient-to-r from-blue-500 via-indigo-600 to-blue-600 text-white border-blue-400 hover:from-blue-600 hover:to-indigo-700'
                      }`}
                    >
                      {selectedAluno?.id === aluno.id ? '‚úì Selecionado' : 'Selecionar Aluno'}
                    </button>
                  </div>
                
                {/* Disciplinas em Recupera√ß√£o */}
                <div className="space-y-3">
                  <h4 className="text-sm font-medium text-gray-700 uppercase tracking-wide">
                    Disciplinas em Recupera√ß√£o ({aluno.disciplinas.length})
                  </h4>
                  {aluno.disciplinas.map((disciplina, idx) => (
                    <div key={idx} className="bg-white rounded-lg p-4 border border-gray-200">
                      <div className="flex items-center justify-between mb-3">
                        <div>
                          <span className="font-semibold text-gray-800 text-lg">{disciplina.nome}</span>
                          <span className={`ml-3 px-2 py-1 rounded-full text-sm font-medium ${getCorStatus(disciplina.nota)}`}>
                            Nota: {disciplina.nota}
                          </span>
                        </div>
                        {selectedAluno?.id === aluno.id && (
                          <button
                            onClick={() => setSelectedDisciplina(selectedDisciplina?.id === disciplina.id ? null : disciplina)}
                            className={`px-3 py-1 rounded-lg text-sm font-medium transition-colors ${
                              selectedDisciplina?.id === disciplina.id
                                ? 'bg-green-600 text-white'
                                : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                            }`}
                          >
                            {selectedDisciplina?.id === disciplina.id ? 'Selecionada ‚úì' : 'Registrar Nota'}
                          </button>
                        )}
                      </div>
                      
                      {/* Detalhes das Avalia√ß√µes */}
                      <div className="space-y-2">
                        <p className="text-xs font-medium text-gray-600 uppercase tracking-wide">Composi√ß√£o da Nota:</p>
                        {disciplina.avaliacoes.map((avaliacao, avalIdx) => (
                          <div key={avalIdx} className="flex justify-between items-center text-sm bg-gray-50 rounded p-2">
                            <span className="text-gray-700">{avaliacao.tipo}</span>
                            <div className="flex items-center space-x-2">
                              <span className="text-gray-600">Peso: {(avaliacao.peso * 100).toFixed(0)}%</span>
                              <span className={`font-medium ${getCorStatus(avaliacao.nota)}`}>
                                {avaliacao.nota}
                              </span>
                            </div>
                          </div>
                        ))}
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>

      {/* Formul√°rio de Registro de Nota */}
      {selectedAluno && selectedDisciplina && (
        <div className="mt-8 bg-gradient-to-r from-blue-50 via-indigo-50 to-purple-50 rounded-2xl shadow-2xl border-3 border-blue-300 p-8" style={{background: 'linear-gradient(135deg, rgba(59, 130, 246, 0.1) 0%, rgba(99, 102, 241, 0.1) 50%, rgba(139, 92, 246, 0.1) 100%)'}}>
          <div className="flex items-center space-x-3 mb-6">
            <div className="p-2 bg-blue-600 rounded-lg">
              <Save className="h-6 w-6 text-white" />
            </div>
            <div>
              <h3 className="text-xl font-bold text-gray-900">
                Registrar Nota de Recupera√ß√£o
              </h3>
              <p className="text-gray-600">
                {selectedAluno.nome} ‚Ä¢ {selectedDisciplina.nome} ‚Ä¢ Nota atual: {selectedDisciplina.nota}
              </p>
            </div>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            {/* Coluna Esquerda */}
            <div className="space-y-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  Tipo de Atividade <span className="text-red-500">*</span>
                </label>
                <select
                  value={tipoAtividade}
                  onChange={(e) => setTipoAtividade(e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white"
                >
                  <option value="">Selecione a atividade...</option>
                  <option value="Prova de Recupera√ß√£o">üìù Prova de Recupera√ß√£o</option>
                  <option value="Trabalho de Recupera√ß√£o">üìö Trabalho de Recupera√ß√£o</option>
                  <option value="Projeto Especial">üéØ Projeto Especial</option>
                  <option value="Apresenta√ß√£o Oral">üé§ Apresenta√ß√£o Oral</option>
                  <option value="Atividade Pr√°tica">üî¨ Atividade Pr√°tica</option>
                  <option value="Lista de Exerc√≠cios">üìã Lista de Exerc√≠cios</option>
                  <option value="Semin√°rio">üë• Semin√°rio</option>
                  <option value="Relat√≥rio">üìÑ Relat√≥rio</option>
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  Nota de Recupera√ß√£o <span className="text-red-500">*</span>
                </label>
                <div className="relative">
                  <input
                    type="number"
                    min="0"
                    max="10"
                    step="0.1"
                    value={notaRecuperacao}
                    onChange={(e) => setNotaRecuperacao(e.target.value)}
                    placeholder="Digite a nota (0.0 a 10.0)"
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                  />
                  <span className="absolute right-3 top-2 text-gray-400 text-sm">/ 10.0</span>
                </div>
                {notaRecuperacao && (
                  <div className={`mt-1 text-sm font-medium ${
                    parseFloat(notaRecuperacao) >= 7.0 ? 'text-green-600' :
                    parseFloat(notaRecuperacao) >= 5.0 ? 'text-orange-600' : 'text-red-600'
                  }`}>
                    {parseFloat(notaRecuperacao) >= 7.0 ? '‚úÖ Aprovado' :
                     parseFloat(notaRecuperacao) >= 5.0 ? '‚ö†Ô∏è Ainda em Recupera√ß√£o' : '‚ùå Reprovado'}
                  </div>
                )}
              </div>
            </div>

            {/* Coluna Direita */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                Observa√ß√µes
              </label>
              <textarea
                value={observacao}
                onChange={(e) => setObservacao(e.target.value)}
                placeholder="Digite observa√ß√µes sobre o desempenho do aluno, dificuldades identificadas, recomenda√ß√µes..."
                rows={6}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none"
              />
              <p className="text-xs text-gray-500 mt-1">
                Campo opcional - Use para registrar observa√ß√µes importantes
              </p>
            </div>
          </div>

          {/* Resumo e Bot√µes */}
          <div className="mt-6 p-4 bg-white rounded-lg border border-blue-200">
            <h4 className="font-medium text-gray-900 mb-2">Resumo do Registro:</h4>
            <div className="grid grid-cols-2 md:grid-cols-4 gap-4 text-sm">
              <div>
                <span className="text-gray-600">Aluno:</span>
                <p className="font-medium">{selectedAluno.nome}</p>
              </div>
              <div>
                <span className="text-gray-600">Disciplina:</span>
                <p className="font-medium">{selectedDisciplina.nome}</p>
              </div>
              <div>
                <span className="text-gray-600">Nota Anterior:</span>
                <p className="font-medium text-red-600">{selectedDisciplina.nota}</p>
              </div>
              <div>
                <span className="text-gray-600">Nova Nota:</span>
                <p className={`font-medium ${
                  notaRecuperacao ? (parseFloat(notaRecuperacao) >= 7.0 ? 'text-green-600' : 'text-orange-600') : 'text-gray-400'
                }`}>
                  {notaRecuperacao || 'N√£o informada'}
                </p>
              </div>
            </div>
          </div>

          <div className="flex justify-end space-x-3 mt-6">
            <button
              onClick={() => {
                setSelectedDisciplina(null);
                setNotaRecuperacao('');
                setTipoAtividade('');
                setObservacao('');
              }}
              className="px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors"
            >
              Cancelar
            </button>
            <button
              onClick={handleSalvarNota}
              disabled={!selectedAluno || !selectedDisciplina || !notaRecuperacao || !tipoAtividade}
              className="flex items-center space-x-3 px-8 py-4 bg-gradient-to-r from-emerald-500 via-green-600 to-emerald-600 text-white rounded-2xl hover:from-emerald-600 hover:to-green-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-all duration-300 font-black text-lg transform hover:scale-105 shadow-2xl border-2 border-emerald-400"
            >
              <Save className="h-4 w-4" />
              <span>üíæ SALVAR NOTA DE RECUPERA√á√ÉO</span>
            </button>
          </div>
        </div>
      )}

      {/* Instru√ß√µes */}
      {selectedAluno && !selectedDisciplina && (
        <div className="mt-6 bg-amber-50 border border-amber-200 rounded-lg p-4">
          <div className="flex items-center space-x-2">
            <AlertTriangle className="h-5 w-5 text-amber-600" />
            <div>
              <h4 className="font-medium text-amber-800">Pr√≥ximo Passo</h4>
              <p className="text-amber-700 text-sm">
                Selecione uma disciplina em recupera√ß√£o para registrar a nota.
              </p>
            </div>
          </div>
        </div>
      )}

      {!selectedAluno && (
        <div className="mt-6 bg-blue-50 border border-blue-200 rounded-lg p-4">
          <div className="flex items-center space-x-2">
            <CheckCircle className="h-5 w-5 text-blue-600" />
            <div>
              <h4 className="font-medium text-blue-800">Como usar o sistema</h4>
              <p className="text-blue-700 text-sm">
                1. Selecione um aluno da lista acima<br/>
                2. Escolha a disciplina em recupera√ß√£o<br/>
                3. Preencha o tipo de atividade e a nota<br/>
                4. Adicione observa√ß√µes se necess√°rio<br/>
                5. Salve o registro
              </p>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}